{"ast":null,"code":"var _jsxFileName = \"/Users/mini/10-Sprint-Mission/10-sprint-mission/panda-app/src/components/ProductList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getProducts } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductList = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const data = await getProducts();\n\n        // 데이터가 배열인지 확인\n        if (Array.isArray(data)) {\n          setProducts(data);\n        } else {\n          throw new Error(\"Invalid data format: Data is not an array.\");\n        }\n      } catch (err) {\n        setError(\"Failed to fetch products: \" + err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProducts();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Product List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), products.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No products available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: products.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: product.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price: $\", product.price.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductList, \"3+N/VFIgZOBgubN9oS5aTzm2qqY=\");\n_c = ProductList;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useEffect","useState","getProducts","jsxDEV","_jsxDEV","ProductList","_s","products","setProducts","loading","setLoading","error","setError","fetchProducts","data","Array","isArray","Error","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","product","name","description","price","toFixed","id","_c","$RefreshReg$"],"sources":["/Users/mini/10-Sprint-Mission/10-sprint-mission/panda-app/src/components/ProductList.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getProducts } from \"../services/api\";\n\nconst ProductList = () => {\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const data = await getProducts();\n\n        // 데이터가 배열인지 확인\n        if (Array.isArray(data)) {\n          setProducts(data);\n        } else {\n          throw new Error(\"Invalid data format: Data is not an array.\");\n        }\n      } catch (err) {\n        setError(\"Failed to fetch products: \" + err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchProducts();\n  }, []);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error}</p>;\n\n  return (\n    <div>\n      <h1>Product List</h1>\n      {products.length === 0 ? (\n        <p>No products available.</p>\n      ) : (\n        <ul>\n          {products.map((product) => (\n            <li key={product.id}>\n              <h2>{product.name}</h2>\n              <p>{product.description}</p>\n              <p>Price: ${product.price.toFixed(2)}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default ProductList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}